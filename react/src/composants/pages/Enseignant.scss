@import '../../sass/mixins.scss';
@import '../../sass/variables.scss';
@import '../../sass/animations.scss';

/*
    Les enseignants ont deux états, ouvert et fermé
    Qu'un seul enseignant ne peut être ouvert à la fois.
    Lorsqu'un enseignant est ouvert, tous les autres sont cachés.
    Sinon, ils sont tous fermés et tous affichés en même temps
*/

/*
    Gestion des couleurs spécifiques à un certain domaine
*/
// Tous les enseignants ouverts
$classes-couleur-domaine: (
    conteneur-photo: background-color,
    miniature: background-color,
    texte: background-color,
    'contenu .domaine': background-color
);

// Tous les enseignants fermés
$classes-couleur-domaine-ferme: (
    domaine: color
);

// Enseignant ouvert de modélisation 3D
// (contraste entre blanc et jaune pas assez grand)
$classes-couleur-domaine-contraste-texte: (
    etiquette-titre: color,
    titre: color,
    etiquette-domaine: color,
    domaine: (color, border-color),
    etiquette-description: color,
    description: color
);

$couleurs-domaines-modifiees: (
    modelisation3d: map-get($couleurs, sombre)
);

.Enseignant {
    @include themer($theme-enseignant);

    @include couleurs-domaines($classes-couleur-domaine-ferme);

    @include couleurs-domaines($classes-couleur-domaine);
    
    @include max-mobile {
        @include couleurs-domaines(
            $classes-couleur-domaine-contraste-texte,
            $couleurs-domaines-modifiees
        );
    }

    @include transition-base;

    @include ordinateur {
        // Séparer la miniature du contenu le plus possible
        // pour la transition
        justify-content: space-between;
        position: absolute;
    }

    &.modelisation3d {
        @include ordinateur {
            .miniature {
                .titre {
                    color: map-get($couleurs, sombre);
                }
            }
        }
    }

    // ===== FERMÉ =====
    &[ouvert="false"] {
        display: none;

        @include ordinateur {
            display: flex;
            height: 60vh;
            // Positionner à droite de l'écran pour la transition
            right: -70vw;
            opacity: 0;
        }

        .miniature {
            @include bulle;
            
            .titre {
                display: none;
                position: absolute;
                left: 5%;
                top: 10%;
            }
    
            .photo {
                object-fit: cover;
                width: 100%;
            }
            @include hover-item($element-hovered: '.photo', $echelle: 1.175)
        }
    
        // Cacher le contenu lorsqu'un enseignant est fermé
        .contenu {
            display: none;
        }
    }

    // ===== OUVERT =====
    &[ouvert="true"] {
        display: flex;
        justify-content: center;
        // Permettre de rendre la liste invisible tout en gardant l'enseignant ouvert visible
        visibility: visible;
        height: 100%;

        .contenu {
            display: flex;
            opacity: 1;
        }

        // enseignant ouvert
        .miniature {
            display: none;
        }

        @include max-tablette {
            justify-content: flex-start;
            overflow-y: scroll;
            height: 100%;
            animation: fondu-entrant ease-in-out .25s;
        }

        @include max-mobile {
            padding-top: 5vh;
            height: unset;
        }

        @include ordinateur {
            opacity: 1;
            // @include couleurs-domaines($classes-couleur-domaine-ferme);
            right: 20vw;
            // align-items: center;

            @include ultra-large {
                right: 45vw;
            }

            .miniature {
                display: flex;
            }

            // Enseignant suivant
            & + .Enseignant {
                display: flex;
                right: -15vw;
                @include transition-base;
                transform: scale(0.5);
                opacity: 1;
                width: 75vw;
                height: 60vh;

                .contenu {
                    display: flex;
                    opacity: 0;
                    @include transition-base;
                }

                // Troisième enseignant
                & + .Enseignant {
                    display: flex;
                    width: 75vw;
                    height: 60vh;
                    @include transition-base;
                    opacity: 0;

                    .contenu {
                        display: none;
                    }
                }
            }
        }

        @include ordinateur-large {
            // Enseignant ouvert
            width: 50vw;

            // Suivant
            & + .Enseignant {
                width: 50vw;
                right: 10vw;

                // Troisième
                & + .Enseignant {
                    display: flex;
                    right: -10vw;
                    @include transition-base;
                    width: 50vw;
                    flex: 0 0 80%;
                    transform: scale(.5);
                    opacity: 1;

                    .contenu {
                        display: flex;
                        opacity: 0;
                    }

                    // Quatrième
                    & + .Enseignant {
                        display: flex;
                        transform: scale(.5);
                    }
                }
            }
        }
    }

    // Général, peu importe l'état. Override les règles de priorité
    &[ouvert="true"],
    &[ouvert="false"] {
        flex-direction: row-reverse; // Afficher le contenu à gauche
        gap: 10vw;

        .miniature {
            overflow: hidden;
            & > *:not(.photo) {display: none;}
    
            // Positionnement d'une carte
            @include ordinateur {
                @include carte;
                aspect-ratio: 1 / 1.5;
                width: 40%;
                padding: 0;

                position: relative;
                overflow: hidden;

                .titre {
                    max-width: 70%;
                    position: static;
                    margin-left: 5%;
                    margin-top: 10%;
                }

                .conteneur-domaine {
                    // Positionnement dans une carte
                    position: absolute;
                    right: 0;
                    top: 0;
                    width: 20%;
                    height: 100%;

                    background-color: map-get($couleurs, sombre);

                    .domaine {
                        white-space: nowrap;
                        position: relative;
                        top: 10%;
                        margin-block-start: 0;
                        margin-block-end: 0;
                        z-index: 1;
                        transform: rotate(90deg);
                    }
                }

                .photo {
                    object-fit: cover;
                    width: 100%;
                    height: 70%;
                    position: absolute;
                    bottom: 0;
                    z-index: 2;
                }
                
                .titre {display: block}
                .conteneur-domaine {display: block}
            }
        }
        // Lorsque ouvert, on montre le contenu en cachant la miniature
        .contenu {
            flex-direction: column;
            align-items: center;
            gap: 5%;
            @include transition-base;

            .retour {
                align-self: flex-start;
                position: absolute;
                top: 10%;
                left: 5%;

                @include ordinateur {
                    left: -10%;
                }
            }

            .texte {
                // Gérer avec la height pour .texte et .contenu, flex-basis marche pas
                height: 110%;
                box-sizing: border-box; // Calculer avec le padding
                padding: 5%;
                border-radius: 30px 30px 0 0;

                display: flex;
                flex-direction: column;

                .domaine {
                    @include etiquette;
                    @include max-mobile {
                        color: map-get($couleurs, clair);
                        border-color: map-get($couleurs, clair);
                    }

                    @include tablette {
                        color: map-get($couleurs, sombre);
                        border: none;
                    }
                }

                .conteneur-description {
                    flex: 1 0 10%;
                    padding: 7.5%;
                    display: flex;
                    justify-content: center;
                    background-color: map-get($couleurs, clair);
                    border-radius: 30px;

                    .description {
                        color: map-get($couleurs, sombre);
                    }

                    @include tablette {
                        border-radius: 0;
                        background-color: transparent;
                        .description {color: map-get($couleurs, clair);}
                        padding: 0;
                    }

                    @include ordinateur {
                        flex: 1 0 30%;
                    }
                }

                [class^="etiquette-"]{
                    // Cacher toutes les étiquettes
                    display: none;
                    flex: 0 1 3%;
                }

                & > * {
                    flex: 0 1 5%;
                }

                // .texte
                @include tablette {
                    // height: 90%;
                    flex: 0 1 50%;
                    border-radius: 0;
                    @include bordures-coins-diagonales(60px, map-get($couleurs, clair));

                    // Tous les éléments qui ne sont pas des étiquettes
                    *:not([class^="etiquette-"]) {margin-left: 2.5%;}

                    // Mettre tout en blanc (pcq sur fond noir) sauf le domaine
                    // qui doit avoir sa couleur personnalisée
                    & > *:not(.domaine) {color: map-get($couleurs, clair)}

                    [class^="etiquette-"]{
                        display: block;
                    }
                }

                @include ordinateur {
                    flex: 1 0 100%;
                    padding: 5%;
                    height: 100%;
                }
            }

            .conteneur-photo {
                height: 30%;
                @include bulle;
                padding: 15px;

                margin-left: 5vw;
                margin-right: 5vw;

                .fond-photo {
                    // height: 100%;
                    aspect-ratio: 1; // Garder carré
                    background-color: map-get($couleurs, clair);
                    border-radius: 50%;
                    display: flex;
                    flex-direction: column;
                    justify-content: flex-end; // Mettre en-bas
                    align-items: center;
                    overflow: hidden;

                    .agrandisseur {
                        display: flex;
                        justify-content: center;
                        align-items: flex-end;

                        // Image
                        .photo {
                            width: 100%;
                            object-fit: cover;
                        }
                    }

                    @include seulement-tablette {
                        position: relative;
                        overflow: unset;

                        .agrandisseur {
                            position: absolute;
                            overflow: hidden;
                            border-radius: 0 0 500px 500px;
                            width: 100%;
                            left: 0px;
                        }
                    }
                }

                @include tablette {
                    margin: unset;
                    margin-top: 10%;
                    flex: 0 0 30%;
                    height: unset;
                }

                // Faire disparaitre la photo du contenu sur ordinateur 
                // puisqu'on utilise la miniature
                @include ordinateur {display: none;}
                .conteneur-domaine,
                .titre {
                    display: none;
                    @include ordinateur {display: block;}
                }
            }

            // .contenu
            @include tablette {
                flex-direction: row;
                align-items: flex-start; // Positionner en-haut de la page
            }

            @include seulement-tablette{
                flex-wrap: nowrap;
                flex-direction: column;
                align-items: center;
            }

            // Ajuster le texte de l'enseignant ouvert
            @include ordinateur {
                width: 50%;

                // Centrer par rapport à tablette
                align-items: center;
                justify-content: center;
                padding: unset;
                height: 100%;

                // Permet la transition de l'enseignant suivant vers le présent
                // position: absolute;
                transform: scale(1);
                @include transition-base;
            }
        }

        @include ultra-large {
            gap: 5%;
            width: 50vw;
        }
    }

    @include ordinateur {
        // Enseignant précédent et enseignant présent
        // DOIVENT ABSOLUMENT avoir les mêmes styles pour un gonne transition
        &:has(+ .Enseignant[ouvert="true"]),
        &[ouvert="true"] {
            display: flex;
            flex-direction: row-reverse;
            @include transition-base;
            width: 75vw;
            height: 60vh;
            gap: 10%;
            transform: scale(1);
            z-index: 2;

            @include ordinateur-large {
                width: 50vw;
                right: 40vw;
            }

            .miniature {
                display: flex;
            }

            .contenu {
                display: flex;
            }
        }

        &:has(+ .Enseignant[ouvert="true"]) {
            right: 120vw;

            .contenu {
                opacity: 0;
            }
        }

        // Le dernier enfant quand le premier enfant est ouvert
        // Sinon, le dernier enfant ne considère pas la transition vers son enfant précédent
        &[ouvert="true"]:first-child ~ &:last-child {
            .contenu {
                display: flex;
            }
        }
    }
}