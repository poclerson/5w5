@import '../../sass/mixins.scss';
@import '../../sass/variables.scss';
@import '../../sass/fonctions.scss';

.ListeProjets {
    overflow-y: scroll;
    @include cacher-barre-defilement;
    @include page(true);

    @include tablette {
        overflow-y: visible;
        overflow-x: scroll;
    }

    .titre {
        @include tablette {grid-colaumn: span 2};

        // Obligé, sinon on doit briser la ligne du titre à un endroit bizarre avec line-break: anywhere
        @media screen and (max-width: 520px) {
            font-size: 10vw;
        }
    }

    &[item-ouvert="false"] {
        .liste {
            display: grid;
            height: max-content;
            grid-template-columns: repeat(2, 1fr);
            grid-auto-rows: 15%;
            grid-auto-flow: row dense; // Permettre aux éléments de prendre de la place quand il y en a
            gap: 5vw;
            padding: 0 5%;

            @include tablette {
                grid-auto-columns: 30vw;
                grid-template-rows: repeat(2, 1fr);
                grid-auto-flow: column dense;

                grid-auto-rows: unset;
                grid-template-columns: unset;

                // Empêcher de toucher le haut
                @include padding-auto;

                // Prend trop de place sinon
                height: 60vh;
            }

            @include ordinateur {
                grid-auto-columns: 15vw;
            }

            // Styles communs
            .evenement {
                position: relative;
                display: flex;
                border-radius: 20px;
                overflow: hidden;

                &:not([ouvert="true"]):hover {
                    @include proprietes-aleatoires(
                        $valeurs: map-values(map-get($couleurs, domaines)),
                        $propriete: background-color,
                        $selecteur: ' .information'
                    );
                    
                    .miniature {
                        .information {
                            backdrop-filter: blur(15px);
                            opacity: 1;
                        }
                    }
                }

                .miniature {
                    overflow: hidden;
                    @include pleine-taille;

                    .information {
                        @include pleine-taille;
                        display: flex;
                        flex-direction: column;
                        top: 0;
                        position: absolute;
                        padding: 10%;
                        box-sizing: border-box;
                        justify-content: center;
                        align-items: center;

                        // Transition
                        @include transition-base($duree: .25s, $courbe: ease-in-out);
                        background-color: transparent;
                        backdrop-filter: blur(0px);
                        opacity: 0;

                        @include tablette {
                            padding: 5%;
                        }
                    }

                    .image-presentation-conteneur {
                        position: relative;
                        @include pleine-taille;

                        .image-presentation {
                            object-fit: cover;
                            @include pleine-taille;
                        }
                    }
                }
            }
        }
    }

    &[item-ouvert="true"] {
        .liste {
            display: block;

            @include tablette {
                margin-top: 0;
            }

            @include ordinateur {
                padding: 0 5%;
                height: unset;
            }

            // Cacher les éléments fermés
            & > *:not([ouvert="true"]) {display: none;}
        }
            
    }

    @include ordinateur {
        padding-bottom: 10%;
    }
}